name: repeat

on:
  push:
    branches:
      - main
      - dev
  pull_request:  

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: julia-actions/setup-julia@v1
      with:
          version: '1.9.1'

    - name: Cache artifacts
      uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts 
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-

    - name: Install Packages
      run: julia --project=. -e 'using Pkg; Pkg.instantiate()'

    - name: Format
      # see: https://github.com/julia-actions/julia-format#workflows
      run:  |        
        julia --project=. -e 'using JuliaFormatter; format(".", verbose=true)'
    - name: Format check
      run: |
        julia -e '
        out = Cmd(`git diff --name-only`) |> read |> String
        if out == ""
            exit(0)
        else
            @error "Some files have not been formatted !!!"
            write(stdout, out)
            exit(1)
        end'

    - name: Run tests
      run: julia --project=. test/runtests.jl